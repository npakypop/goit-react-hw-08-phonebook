{"version":3,"file":"static/js/701.d413e4f8.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","components/AddForm/AddForm.jsx","components/SearchForm/SearchForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Box } from '@mui/material';\n\nexport const Section = ({ children }) => {\n  return <Box sx={{ p: '20px 40px' }}>{children}</Box>;\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\n// import { Title, Form, Input, Button, Label } from './AddForm.styled';\nimport { selectItems } from 'redux/selectors';\nimport Button from '@mui/material/Button';\nimport { Container } from '@mui/system';\nimport { TextField, Typography } from '@mui/material';\n\nexport const AddForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(selectItems);\n  const dispatch = useDispatch();\n\n  const inputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const addContactSubmit = event => {\n    event.preventDefault();\n    onFormSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const onFormSubmit = contact => {\n    if (items.some(el => el.name === contact.name)) {\n      alert(`Contact with name ${contact.name} already exists`);\n      return;\n    }\n    const newContact = {\n      name: contact.name,\n      number: contact.number,\n    };\n    const action = addContact(newContact);\n    dispatch(action);\n  };\n\n  return (\n    <Container>\n      <Typography component=\"h1\" sx={{ mb: '10px', fontSize: '20px' }}>\n        Phonebook\n      </Typography>\n      <form onSubmit={addContactSubmit}>\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          value={name}\n          onChange={inputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <TextField\n          label=\"Phone Number\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          value={number}\n          onChange={inputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n          Add Contact\n        </Button>\n      </form>\n    </Container>\n  );\n};\n","import { Container, TextField, Typography } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filter/filterSlice';\nimport { selectFilterValue, selectItems } from 'redux/selectors';\n\nexport const SearchForm = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n\n  const changeFilter = value => {\n    dispatch(filterContacts(value));\n  };\n  return (\n    <Container>\n      <Typography component=\"h2\" sx={{ mb: '10px', fontSize: '20px' }}>\n        Search\n      </Typography>\n      <TextField\n        disabled={items.length <= 0 && true}\n        id=\"outlined-basic\"\n        label=\"Search\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        onChange={event => changeFilter(event.target.value)}\n        value={filterValue}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </Container>\n  );\n};\n","import { Box, Button, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n// import { Item, Info, Button } from './Contact.styled';\n\nexport const Contact = ({ name, phone, id, onDeleteContact }) => {\n  return (\n    <Box\n      component=\"li\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '5px',\n        mb: '10px',\n      }}\n    >\n      <Typography>\n        <strong>Name: </strong>\n        {name}\n      </Typography>\n      <Typography>\n        <strong>Phone: </strong>\n        {phone}\n      </Typography>\n      <Button\n        size=\"small\"\n        onClick={() => onDeleteContact(id)}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Delete contact\n      </Button>\n    </Box>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n","import { Contact } from '../Contact/Contact';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectItems, selectFilterValue } from 'redux/selectors';\nimport { Box, Container, Typography } from '@mui/material';\n\nexport const ContactList = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const items = useSelector(selectItems);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    const action = deleteContact(contactId);\n    dispatch(action);\n  };\n\n  const getFilteredContacts = () => {\n    return items.filter(contact =>\n      contact.name\n        .trim()\n        .toLowerCase()\n        .includes(filterValue.trim().toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Container>\n      <Typography component=\"h2\" sx={{ mb: '10px', fontSize: '20px' }}>\n        Contacts\n      </Typography>\n      {items.length <= 0 ? (\n        <Typography component=\"p\">Your phonebook is empty</Typography>\n      ) : (\n        <Box component=\"ul\">\n          {filteredContacts.map(({ id, name, number }) => (\n            <Contact\n              key={id}\n              id={id}\n              name={name}\n              phone={number}\n              onDeleteContact={onDeleteContact}\n            />\n          ))}\n        </Box>\n      )}\n    </Container>\n  );\n};\n","import { Box } from '@mui/material';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Box sx={{ position: 'absolute' }}>\n      <ThreeDots\n        height=\"25\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"#021526\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Box>\n  );\n};\n","import { Section } from '../../components/Section/Section';\nimport { AddForm } from '../../components/AddForm/AddForm';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectIsLoading, selectError } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { Container } from '@mui/material';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container sx={{ display: 'flex', justifyContent: 'space-between' }}>\n      <Section>\n        <AddForm />\n      </Section>\n      <Section>\n        <SearchForm />\n      </Section>\n      <Section>\n        {isLoading && <Loader />}\n        {error && <p>{error}</p>}\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Section","children","Box","sx","p","AddForm","useState","name","setName","number","setNumber","items","useSelector","selectItems","dispatch","useDispatch","inputChange","event","currentTarget","value","onFormSubmit","contact","some","el","alert","newContact","action","addContact","Container","Typography","component","mb","fontSize","onSubmit","preventDefault","TextField","label","variant","color","onChange","type","pattern","title","required","Button","SearchForm","filterValue","selectFilterValue","disabled","length","id","target","filterContacts","Contact","phone","onDeleteContact","display","flexDirection","gap","size","onClick","ContactList","contactId","deleteContact","filteredContacts","filter","trim","toLowerCase","includes","map","Loader","position","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","justifyContent"],"sourceRoot":""}